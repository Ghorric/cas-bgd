apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cas-bgd-chart.fullname" . }}
  labels:
    {{- include "cas-bgd-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "cas-bgd-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "cas-bgd-chart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "cas-bgd-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # Just spin & wait forever
#          command: [ "/bin/bash", "-c", "--" ]
#          args: [ "while true; do sleep 30; done;" ]
          command: [ "./run-img-label-processor.sh"]
          args: [ "-t", "\'user-events\'" ]
          env:
            - name: PEXEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: pexels-secrets
                  key: token
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-cloud-secrets
                  key: image-labels
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-cloud-cfg
                  key: host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis-cloud-cfg
                  key: port
            - name: REDIS_DB
              valueFrom:
                configMapKeyRef:
                  name: redis-cloud-cfg
                  key: database
          volumeMounts:
            - mountPath: "/secrets"
              name: img-secrets
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: img-secrets
          secret:
            secretName: img-secrets
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
